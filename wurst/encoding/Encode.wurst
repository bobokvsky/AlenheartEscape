package Encode

import StringUtils
import UsefulFunctions

constant string ALPHABET = "!#$%&()*+0123456789<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]abcdefghijklmnopqrstuvwxyz{}~"
constant int BASE = ALPHABET.length()
constant string SIGN_CHARACTER = "-"
int array ALPHABET_REVERSE

init
    for i = 0 to BASE
        int char_id = char(ALPHABET.charAt(i)).toInt()
        ALPHABET_REVERSE[char_id] = i

function num_encode(int n) returns string
    if n < 0
        return SIGN_CHARACTER + num_encode(-n)

    string s = ""
    int a = n
    while a > 0
        int r = a mod BASE
        a = a div BASE
        s = s + ALPHABET.charAt(r)
    return s.reversed()


function num_decode(string s) returns int
    if s.charAt(0) == SIGN_CHARACTER
        return -num_decode(s.substring(1, s.length()))
    int n = 0
    for c in s
        int char_id = char(c).toInt()
        n = n * BASE + ALPHABET_REVERSE[char_id]
    return n